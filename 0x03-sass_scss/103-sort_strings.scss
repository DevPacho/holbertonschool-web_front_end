/* Sorting a list */

@import "_103-sort_list";

/// @type List
$default-order: "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" !default;

@function _str-compare($a, $b, $order) {
  @if type-of($a)=="number" and type-of($b)=="number" {
    @return $a < $b;
  }

  $a: to-lower-case($a + unquote(""));
  $b: to-lower-case($b + unquote(""));

  @for $i from 1 through min(str-length($a), str-length($b)) {
    $char-a: str-slice($a, $i, $i);
    $char-b: str-slice($b, $i, $i);

    @if $char-a and $char-b and index($order, $char-a) !=index($order, $char-b) {
      @return index($order, $char-a) < index($order, $char-b);
    }
  }

  @return str-length($a) < str-length($b);
}

@function _swap($list, $a, $b) {
  @if abs($a) > length($list) or abs($b) > length($list) {
    @return $list;
  }

  $tmp: nth($list, $a);
  $list: set-nth($list, $a, nth($list, $b));
  $list: set-nth($list, $b, $tmp);
  @return $list;
}

@function bubble-sort($list, $order: $default-order) {
  @for $i from 1 through length($list) {
    @for $j from $i through 1 {
      @if $j > 1 and _str-compare(nth($list, $j), nth($list, $j - 1), $order) {
        $list: _swap($list, $j, $j - 1);
      }
    }
  }

  @return $list;
}

$names_list: $list_to_sort;
$sorted_list: bubble-sort($names_list, $default-order);

@debug $sorted_list;
